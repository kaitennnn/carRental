<!DOCTYPE html>
<html lang="zh-HK">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./stylesheets/style.css">
    <style>
        /* 搜索框樣式 - 扁平長方形 */
        .search-box {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
        }

        .search-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            align-items: end;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 5px;
            color: #495057;
        }

        .form-group select,
        .form-group input {
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            font-size: 14px;
            background-color: white;
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <a href="/" class="logo">CarRental</a>
        <ul class="nav-links">
            <li><a href="/">Home</a></li>
            <li><a href="/cars">CarList</a></li>
            <li class="user-menu">
                <a href="#" class="user-icon">
                    <i class="fas fa-user"></i>
                </a>
                <ul class="dropdown-menu">
                    <% if (currentUser) { %>
                        <li>您好，<%= currentUserName %>！</li>
                        <li>
                            <form action="users/logout" method="post"><button>登出</button></form>
                        </li>
                        <% } else { %>
                            <li><a href="users/login">登入</a></li>
                            <% } %>
                </ul>
            </li>
        </ul>
    </nav>

    <main class="cars-container">
        <div class="search-box">
            <form id="search" class="search-form">
                <div class="form-group">
                    <label for="brand">品牌:</label>
                    <select id="brand" name="brand">
                        <option value="">載入中...</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="model">型號:</label>
                    <select id="model" name="model">
                        <option value="" <%=locals.model=='' ?'selected':''%>>請先選擇品牌</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="dailyRate">日租金上限:</label>
                    <input type="number" id="dailyRate" name="dailyRate" placeholder="例如 3000"
                        value="<%=locals.dailyRate?dailyRate:''%>">
                </div>

                <div class="form-group">
                    <label for="seats">座位數:</label>
                    <input type="number" id="seats" name="seats" placeholder="例如 5" value="<%=locals.seats?seats:''%>">
                </div>

                <div class="form-group">
                    <label for="dateRange">租車日期:</label>
                    <input type="text" id="dateRange" placeholder="選擇日期區間">
                </div>

                <!-- 隱藏欄位，用來存 startDate 和 endDate -->
                <input type="hidden" id="startDate" name="startDate" value="<%=locals.seats?seats:''%>">
                <input type="hidden" id="endDate" name="endDate" value="<%=locals.seats?seats:''%>">

                <button type="button" class="search-button" onclick="search()">搜尋車輛</button>
                <% if (currentRole==='admin' ) { %>
                    <button type="button" class="search-button" onclick="window.location.href='/add-car.html'">➕
                        新增車輛</button>
                    <% } %>
            </form>
        </div>

    </main>

    <section>
        <div id="searchResult" class="cars-grid"></div>
    </section>

    <footer>
        <p>&copy; 2024 CarRental. All rights reserved.</p>
    </footer>

</body>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    window.initialBrand = '<%= locals.brand || "" %>';
    window.initialModel = '<%= locals.model || "" %>';
    let currentSearchParams = new URLSearchParams();
    let skip = 0;
    let loading = false;
    let finished = false;
    const BATCH_SIZE = 9;
    const modelCache = new Map(); // 快取型號資料

    // 統一的渲染函數
    const renderCars = (cars, append = false) => {
        const container = document.getElementById("searchResult");
        if (!cars || cars.length === 0) {
            if (!append) {
                container.innerHTML = '<div class="no-results">沒有找到符合條件的車輛</div>';
            }
            return;
        }

        let cardsHtml = '';
        cars.forEach(car => {
            cardsHtml += `
            <a href="/booking?carID=${car.carID}" class="car-card-link">
                <div class="car-card">
                    <img src="${car.imageURL || '/images/default-car.jpg'}"
                         class="car-image"
                         onerror="this.src='/images/default-car.jpg'">
                    <div class="car-info">
                        <div class="car-title">${car.brand} ${car.model}</div>
                        <div class="car-year">${car.year}年</div>
                        <div class="car-details">
                            <div class="car-detail"><strong>車型:</strong> ${car.type || ''}</div>
                            <div class="car-detail"><strong>座位:</strong> ${car.seats || ''}人</div>
                            <div class="car-detail"><strong>傳動:</strong> ${car.transmission || ''}</div>
                            <div class="car-detail"><strong>動力:</strong> ${car.powerSource || ''}</div>
                        </div>
                        <div class="car-price">$${car.dailyRate || 0}/日</div>
                    </div>
                    <% if (currentRole == 'admin') { %>
                    <div class="admin-buttons">
                <button onclick="editCar('${car.carID}')">編輯</button>
                <button onclick="deleteCar('${car.carID}')">刪除</button>
                </div>
                <% } %>
                </div>
            </a>`;
        });
        if (append) {
            container.innerHTML += cardsHtml;
        } else {
            container.innerHTML = cardsHtml;
        }
    };

    // 載入品牌列表
    const loadBrands = async () => {
        const brandSelect = document.getElementById('brand');
        try {
            const response = await fetch('cars/api/brands');
            if (!response.ok) throw new Error(`HTTP ${response.status}`);

            const brands = await response.json();
            console.log('Brands loaded:', brands);

            // 清空並填充品牌選項
            brandSelect.innerHTML = '<option value="">請選擇品牌</option>';
            brands.forEach(brand => {
                const option = document.createElement('option');
                option.value = brand;
                option.textContent = brand;
                brandSelect.appendChild(option);
            });

            // 如果有初始選中的 brand，設置並載入對應型號
            if (window.initialBrand) {
                brandSelect.value = window.initialBrand;
                await loadModels(window.initialBrand);
            }

        } catch (error) {
            console.error('載入品牌失敗:', error);
            brandSelect.innerHTML = '<option value="">載入品牌失敗</option>';
        }
    };

    // 載入型號列表
    const loadModels = async (selectedBrand) => {
        const modelSelect = document.getElementById('model');

        if (!selectedBrand) {
            modelSelect.innerHTML = '<option value="">請先選擇品牌</option>';
            return;
        }

        modelSelect.innerHTML = '<option value="">載入中...</option>';

        try {
            let models;

            // 檢查快取
            if (modelCache.has(selectedBrand)) {
                models = modelCache.get(selectedBrand);
            } else {
                // 從 API 獲取並快取
                const response = await fetch(`cars/api/models/${encodeURIComponent(selectedBrand)}`);
                if (!response.ok) throw new Error(`HTTP ${response.status}`);

                models = await response.json();
                modelCache.set(selectedBrand, models);
            }

            console.log('Models loaded for', selectedBrand, ':', models);

            // 填充型號選項
            modelSelect.innerHTML = '<option value="">請選擇型號</option>';
            models.forEach(model => {
                const option = document.createElement('option');
                option.value = model;
                option.textContent = model;
                modelSelect.appendChild(option);
            });

            // 如果有初始選中的 model，設置之
            if (window.initialModel) {
                modelSelect.value = window.initialModel;
            }

        } catch (error) {
            console.error('載入型號失敗:', error);
            modelSelect.innerHTML = '<option value="">載入型號失敗</option>';
        }
    };

    // 搜尋函數
    const search = async () => {
        const form = document.getElementById("search");
        const formData = new URLSearchParams();

        Array.from(form.elements).filter(input => input.type != 'button').forEach(input => {
            if (input.value != "") formData.append(input.name, input.value);
        });

        currentSearchParams = new URLSearchParams(formData);
        skip = 0;
        finished = false;

        try {
            formData.append('skip', '0');
            formData.append('limit', BATCH_SIZE.toString());

            const response = await fetch("/cars/search", {
                method: "POST",
                body: formData
            });

            if (!response.ok) throw new Error(`Response status: ${response.status}`);
            const cars = await response.json();
            console.log(cars);

            renderCars(cars, false);
            skip = cars.length;
            if (cars.length < BATCH_SIZE) finished = true;

        } catch (error) {
            console.log(error.message);
            document.getElementById("searchResult").innerHTML =
                '<div class="no-results">搜索時發生錯誤，請稍後再試</div>';
        }
    };

    // 載入下一批
    const loadNextBatch = async () => {
        if (loading || finished) return;
        loading = true;

        const params = new URLSearchParams(currentSearchParams);
        params.append('skip', skip.toString());
        params.append('limit', BATCH_SIZE.toString());

        try {
            const res = await fetch('/cars/search', {
                method: 'POST',
                body: params
            });
            if (!res.ok) throw new Error(res.status);
            const cars = await res.json();

            if (cars.length < BATCH_SIZE) finished = true;
            renderCars(cars, true);
            skip += cars.length;
        } catch (err) {
            console.error('載入錯誤', err);
        } finally {
            loading = false;
        }
    };

    // 初始化日期選擇器
    const initDatePicker = () => {
        flatpickr("#dateRange", {
            mode: "range",
            minDate: "today",
            dateFormat: "Y-m-d",
            disableMobile: true,
            locale: {
                rangeSeparator: " 至 ",
                firstDayOfWeek: 1,
                weekdays: {
                    shorthand: ["日", "一", "二", "三", "四", "五", "六"],
                    longhand: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]
                }
            },
            onChange: function (selectedDates, dateStr, instance) {
                if (selectedDates.length === 2) {
                    document.getElementById("startDate").value = selectedDates[0].toISOString().split('T')[0];
                    document.getElementById("endDate").value = selectedDates[1].toISOString().split('T')[0];
                }
            }
        });
    };

    // 頁面初始化
    document.addEventListener('DOMContentLoaded', async () => {
        // 1. 載入品牌選項
        await loadBrands();

        // 2. 綁定品牌變更事件
        document.getElementById('brand').addEventListener('change', function () {
            loadModels(this.value);
        });

        // 3. 初始化日期選擇器
        initDatePicker();

        // 4. 執行初始搜索
        search();
    });

    // 滾動載入更多
    window.addEventListener('scroll', () => {
        const { scrollTop, clientHeight, scrollHeight } = document.documentElement;
        if (scrollTop + clientHeight >= scrollHeight - 100) {
            loadNextBatch();
        }
    });

    function editCar(carID) {
        window.location.href = `/add-car.html?carID=${carID}`;
    }

    async function deleteCar(carID) {
        if (!confirm('確定要刪除這輛車嗎？')) return;

        try {
            const res = await fetch(`/cars/delete/${carID}`, {
                method: 'DELETE'
            });
            if (!res.ok) throw new Error('刪除失敗');
            alert('刪除成功');
            search(); // 重新載入車輛列表
        } catch (err) {
            alert('刪除失敗，請稍後再試');
            console.error(err);
        }
    }

</script>

</html>