<!DOCTYPE html>
<html lang="en-HK">

<head>
    <meta charset="UTF-8">
    <meta name="csrf-token" content="<%= csrfToken %>">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Car Rental Service</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <!-- Flatpickr CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>
<style>
    /* 英雄区域 */
    .hero {
        background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
        /* 动态几何背景图案 */
    }

    /* 弹窗背景 */
    #aiRecommendModal {
        display: none;
        /* 默认隐藏，由 JS 控制 */
        position: fixed;
        inset: 0;
        /* top/right/bottom/left 同时设为0 */
        background: rgba(0, 0, 0, 0.6);
        z-index: 1000;
        align-items: center;
        justify-content: center;
    }

    /* 弹窗对话框 */
    #aiRecommendModal .modal-dialog {
        background: #ffffff;
        border-radius: 8px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
        max-width: 90%;
        width: 600px;
        margin: 0 16px;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    /* 弹窗头部 */
    #aiRecommendModal .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 16px;
        border-bottom: 1px solid #eaeaea;
    }

    #aiRecommendModal .modal-header .modal-title {
        margin: 0;
        font-size: 1.125rem;
        font-weight: 500;
        color: #333;
    }

    /* 关闭按钮 */
    #aiRecommendModal .modal-header .close {
        background: transparent;
        border: none;
        font-size: 1.25rem;
        line-height: 1;
        color: #555;
        cursor: pointer;
        padding: 4px;
    }

    #aiRecommendModal .modal-header .close:hover {
        color: #000;
    }

    /* 弹窗主体 */
    #aiRecommendModal .modal-body {
        padding: 16px;
        font-size: 0.95rem;
        color: #444;
    }

    #aiRecommendModal .modal-body p {
        color: #000 !important;
    }

    /* 用户输入框 */
    #aiRecommendModal #aiPrompt {
        width: 100%;
        height: 80px;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 0.95rem;
        resize: vertical;
    }

    /* AI 响应区域 */
    #aiRecommendModal #aiResponse {
        margin-top: 12px;
        padding: 16px;
        background: #f9f9f9;
        border-radius: 4px;
        font-size: 0.95rem;
        max-height: 400px;
        overflow-y: auto;
    }

    /* 弹窗底部 */
    #aiRecommendModal .modal-footer {
        padding: 15px 16px;
        border-top: 1px solid #eaeaea;
        text-align: right;
    }

    /* 发送按钮 */
    #aiRecommendModal #aiSendBtn {
        background-color: #007bff;
        border: none;
        color: white;
        padding: 8px 16px;
        font-size: 0.95rem;
        border-radius: 4px;
        cursor: pointer;
    }

    #aiRecommendModal #aiSendBtn:hover {
        background-color: #0056b3;
    }

    /* 小屏设备优化 */
    @media (max-width: 480px) {
        #aiRecommendModal .modal-dialog {
            width: 95%;
        }

        #aiRecommendModal .modal-header,
        #aiRecommendModal .modal-footer {
            padding: 8px 12px;
        }

        #aiRecommendModal .modal-body {
            padding: 12px;
        }
    }
</style>

<body>
    <nav class="navbar">
        <a href="/" class="logo">carRental</a>
        <ul class="nav-links">

            <li><a href="/">Home</a></li>
            <li><a href="/cars">CarList</a></li>
            <% if (currentUser) { %>
                <li><a href="/users/profile/<%= currentUserName %>">Profile</a></li>
                <li class="user-menu">
                    <!-- 登录后直接显示用户名 -->
                    <span class="user-name">Hello, <%= currentUserName %>!</span>
                    <form action="/users/logout" method="post" class="logout-form">
                        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                        <button type="submit" class="logout-button">Logout</button>
                    </form>
                </li>
                <% } else { %>
                    <li class="user-menu">
                        <a href="/users/login">
                            <i class="fas fa-user">Login</i>
                        </a>
                    </li>
                    <% } %>
        </ul>
    </nav>

    <header class="hero">
        <div class="hero-content">
            <div class="search-box">
                <form id="searchForm" action="/cars" method="get">
                    <div class="form-group">
                        <label for="brand">Brand:</label>
                        <select id="brand" name="brand">
                            <option value="">Loading...</option>
                        </select>

                        <label for="model">Model:</label>
                        <select id="model" name="model">
                            <option value="">Please select a brand first</option>
                        </select>

                        <label for="dailyRate">Daily Rate:</label>
                        <input type="number" id="dailyRate" name="dailyRate" placeholder="Minimum $600" min="600">

                        <label for="seats">Number of Seats:</label>
                        <input type="number" id="seats" name="seats" placeholder="Enter 2-7" min="2">

                        <label for="dateRange">Rental Date:</label>
                        <input type="text" id="dateRange" placeholder="Select date range">

                    </div>

                    <!-- 隱藏欄位，用來存 startDate 和 endDate -->
                    <input type="hidden" id="startDate" name="startDate">
                    <input type="hidden" id="endDate" name="endDate">
                    <div class="form-group">
                        <button type="submit" class="search-button">Search Cars</button>
                    </div>

                </form>
            </div>

            <div class="hero-text">
                <h2>Welcome to Our Car Rental Service</h2>
                <p>Providing Our Clients a High-Quality Car Rental Experience for a Satisfying Journey!</p>
                <button id="aiRecommendBtn" class="btn btn-secondary">
                    Recommend a Car
                </button>
                <div id="aiRecommendModal" class="modal" tabindex="-1" role="dialog" style="display:none;">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Find Your Ideal Car</h5>
                                <button type="button" class="close" id="aiCloseBtn" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>Tell me your requirements:</p>
                                <textarea id="aiPrompt" class="form-control" rows="3"
                                    placeholder="e.g. I need a family SUV with at least 5 seats and under $100 per day."></textarea>
                                <div id="aiResponse" class="mt-3"></div>
                            </div>
                            <div class="modal-footer">
                                <button id="aiSendBtn" class="btn btn-primary">Send</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <section>
        <div id="searchResult" class="cars-grid"></div>
    </section>

    <section class="features">
        <h2>Our Features</h2>
        <div class="feature-grid">
            <div class="feature-card">
                <h3>Diverse Vehicle Types</h3>
                <p>A variety of vehicles for you to choose from</p>
            </div>
            <div class="feature-card">
                <h3>Competitive Prices</h3>
                <p>Reasonable prices with exceptional service</p>
            </div>
            <div class="feature-card">
                <h3>24/7 Service</h3>
                <p>Round-the-clock customer support</p>
            </div>
        </div>
    </section>

    <footer>
        <p>Copyright &copy; 2025 carRental. All rights reserved.</p>
    </footer>

    <!-- Scripts -->
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        // 全域變數
        const modelCache = new Map();
        const BATCH_SIZE = 9;
        let skip = 0;
        let loading = false;
        let finished = false;

        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

        async function postJson(url, body) {
            const res = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'CSRF-Token': csrfToken    // csurf 默认会读取这个 header
                },
                body: JSON.stringify(body)
            });
            return res;
        }

        // 載入品牌列表
        const loadBrands = async () => {
            const brandSelect = document.getElementById('brand');
            try {
                const response = await fetch('cars/api/brands');
                if (!response.ok) throw new Error(`HTTP ${response.status}`);

                const brands = await response.json();
                console.log('Brands loaded:', brands);

                brandSelect.innerHTML = '<option value="">Select Brand</option>';
                brands.forEach(brand => {
                    const option = document.createElement('option');
                    option.value = brand;
                    option.textContent = brand;
                    brandSelect.appendChild(option);
                });

            } catch (error) {
                console.error('載入品牌失敗:', error);
                brandSelect.innerHTML = '<option value="">Failed to load brands</option>';
            }
        };

        // 載入型號列表
        const loadModels = async (selectedBrand) => {
            const modelSelect = document.getElementById('model');

            if (!selectedBrand) {
                modelSelect.innerHTML = '<option value="">Please select a brand first</option>';
                return;
            }

            modelSelect.innerHTML = '<option value="">Loading...</option>';

            try {
                let models;

                // 檢查快取
                if (modelCache.has(selectedBrand)) {
                    models = modelCache.get(selectedBrand);
                } else {
                    // 從 API 獲取並快取
                    const response = await fetch(`cars/api/models/${encodeURIComponent(selectedBrand)}`);
                    if (!response.ok) throw new Error(`HTTP ${response.status}`);

                    models = await response.json();
                    modelCache.set(selectedBrand, models);
                }

                console.log('Models loaded for', selectedBrand, ':', models);

                // 填充型號選項
                modelSelect.innerHTML = '<option value="">Select Model</option>';
                models.forEach(model => {
                    const option = document.createElement('option');
                    option.value = model;
                    option.textContent = model;
                    modelSelect.appendChild(option);
                });

            } catch (error) {
                console.error('載入型號失敗:', error);
                modelSelect.innerHTML = '<option value="">Failed to load models</option>';
            }
        };

        // 統一的渲染函數
        const renderCars = (cars, append = false) => {
            const container = document.getElementById('searchResult');

            if (!cars || cars.length === 0) {
                if (!append) {
                    container.innerHTML = '<div class="no-results">No vehicles found matching your criteria</div>';
                }
                return;
            }

            const cardsHtml = cars.map(car => `
             <a href="/booking?carID=${car.carID}" class="car-card-link">
                <div class="car-card">
                    <img src="${car.imageURL || '/images/default-car.jpg'}" 
                         alt="${car.brand} ${car.model}" 
                         class="car-image"
                         onerror="this.src='/images/default-car.jpg'">
                    <div class="car-info">
                        <div class="car-title">${car.brand} ${car.model}</div>
                        <div class="car-year">${car.year} Year</div>
                        <div class="car-details">
                            <div class="car-detail"><strong>Type:</strong> ${car.type || ''}</div>
                            <div class="car-detail"><strong>Seats:</strong> ${car.seats || ''} passengers</div>
                            <div class="car-detail"><strong>Transmission:</strong> ${car.transmission || ''}</div>
                            <div class="car-detail"><strong>Power Source:</strong> ${car.powerSource || ''}</div>
                        </div>
                        <div class="car-price">$${(car.dailyRate || 0).toLocaleString()}/day</div>
                    </div>
                </div>
            </a>
            `).join('');

            if (append) {
                container.innerHTML += cardsHtml;
            } else {
                container.innerHTML = cardsHtml;
            }
        };

        // 載入下一批
        const loadNextBatch = async () => {
            if (loading || finished) return;
            loading = true;
            try {
                const response = await postJson('/cars/search', {
                    skip: String(skip),
                    limit: String(BATCH_SIZE)
                });

                if (!response.ok) throw new Error(`HTTP ${response.status}`);
                const cars = await response.json();

                if (cars.length < BATCH_SIZE) finished = true;
                renderCars(cars, true);
                skip += cars.length;

            } catch (error) {
                console.error('載入車輛失敗:', error);
                if (skip == 0) {
                    document.getElementById('searchResult').innerHTML =
                        '<div class="no-results">Error occurred while loading vehicle data</div>';
                }
            } finally {
                loading = false;
            }
        };

        // 初始化日期選擇器
        const initDatePicker = () => {
            flatpickr("#dateRange", {
                mode: "range",
                minDate: "today",
                dateFormat: "Y-m-d",
                disableMobile: true,
                locale: {
                    rangeSeparator: " to ",
                    firstDayOfWeek: 1,
                    weekdays: {
                        shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                        longhand: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                    }
                },
                onChange: function (selectedDates) {
                    if (selectedDates.length === 2) {
                        document.getElementById("startDate").value = selectedDates[0].toISOString().split('T')[0];
                        document.getElementById("endDate").value = selectedDates[1].toISOString().split('T')[0];
                    }
                }
            });
        };

        // 車輛選擇處理
        const selectCar = (carId) => {
            console.log('Selected car:', carId);
            window.location.href = `/booking?carID=${carId}`;
        };

        // 滾動載入更多
        window.addEventListener('scroll', () => {
            const { scrollTop, clientHeight, scrollHeight } = document.documentElement;
            if (scrollTop + clientHeight >= scrollHeight - 100) {
                loadNextBatch();
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            const btn = document.getElementById('aiRecommendBtn');
            const modal = document.getElementById('aiRecommendModal');
            const closeBtn = document.getElementById('aiCloseBtn');
            const sendBtn = document.getElementById('aiSendBtn');
            const promptInput = document.getElementById('aiPrompt');
            const responseDiv = document.getElementById('aiResponse');

            btn.addEventListener('click', () => {
                modal.style.display = 'flex';
                promptInput.value = '';
                responseDiv.innerHTML = '';
            });
            closeBtn.addEventListener('click', () => modal.style.display = 'none');

            sendBtn.addEventListener('click', async () => {
                const prompt = promptInput.value.trim();
                if (!prompt) {
                    responseDiv.innerHTML = '<p class="text-danger">Please enter your requirements.</p>';
                    return;
                }
                responseDiv.innerHTML = '<p>Loading recommendations…</p>';
                try {
                    const res = await fetch('/ai/recommend', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                        },
                        body: JSON.stringify({ prompt })
                    });
                    const { text, cars } = await res.json();
                    // 显示 AI 建议
                    responseDiv.innerHTML = `<p>${text}</p>`;
                    // 列出检索到的车辆
                    if (cars.length) {
                        const list = cars.map(c =>
                            `<li>${c.brand} ${c.model} — $${c.dailyRate}/day, ${c.seats} seats ,<a href="/booking?carID=${c.carID}">go booking</a></li>`
                        ).join('');
                        responseDiv.innerHTML += `<ul>${list}</ul>`;
                    }
                } catch (err) {
                    console.error(err);
                    responseDiv.innerHTML = '<p class="text-danger">Failed to fetch recommendations.</p>';
                }
            });
        });

        // 頁面初始化
        document.addEventListener('DOMContentLoaded', async () => {
            modelCache.clear();
            // 1. 載入品牌選項
            await loadBrands();

            // 2. 綁定品牌變更事件
            document.getElementById('brand').addEventListener('change', function () {
                loadModels(this.value);
            });

            // 3. 初始化日期選擇器
            initDatePicker();

            // 4. 載入初始車輛資料
            loadNextBatch();
        });
    </script>

</body>

</html>