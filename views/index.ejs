<!DOCTYPE html>
<html lang="zh-HK">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>租車服務</title>
    <link rel="stylesheet" href="../stylesheets/style.css">
    <!-- Flatpickr CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>

<body>
    <nav class="navbar">
    <a href="/" class="logo">CarRental</a>
    <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/cars">CarList</a></li>
        <% if (currentUser) { %>
            <li class="user-menu">
                <!-- 登录后直接显示用户名 -->
                <span class="user-name">您好，<%= currentUserName %>！</span>
                <form action="/users/logout" method="post" class="logout-form">
                    <button type="submit" class="logout-button">登出</button>
                </form>
            </li>
        <% } else { %>
            <li class="user-menu">
                <a href="/users/login">
                    <i class="fas fa-user">登入</i> 
                </a>
            </li>
        <% } %>
    </ul>
</nav>

    <header class="hero">
        <div class="hero-content">
            <div class="search-box">
                <form id="searchForm" action="/cars" method="get">
                    <label for="brand">品牌 (Brand):</label>
                    <select id="brand" name="brand">
                        <option value="">載入中...</option>
                    </select>

                    <label for="model">型號 (Model Number):</label>
                    <select id="model" name="model">
                        <option value="">請先選擇品牌</option>
                    </select>

                    <label for="dailyRate">日租金上限 (Daily Rental Cap):</label>
                    <input type="number" id="dailyRate" name="dailyRate" placeholder="例如 3000">

                    <label for="seats">座位數 (Number of Seats):</label>
                    <input type="number" id="seats" name="seats" placeholder="例如 5">

                    <label for="dateRange">租車日期 (Date of Rental):</label>
                    <input type="text" id="dateRange" placeholder="選擇日期區間">

                    <!-- 隱藏欄位，用來存 startDate 和 endDate -->
                    <input type="hidden" id="startDate" name="startDate">
                    <input type="hidden" id="endDate" name="endDate">

                    <button type="submit" class="search-button">搜尋車輛</button>
                </form>
            </div>

            <div class="hero-text">
                <h1>歡迎使用我們的租車服務</h1>
                <h2>Welcome to Our Car Rental Service</h2>
                <p>提供優質的租車體驗，讓您的旅程更加完美</p>
                <p>Providing Our Clients a High-Quality Car Rental Experience for a Satisfying Journey!</p>
            </div>
        </div>
    </header>

    <section>
        <div id="searchResult" class="cars-grid"></div>
    </section>

    <section class="features">
        <h2>我們的特色</h2>
        <div class="feature-grid">
            <div class="feature-card">
                <h3>多樣車型</h3>
                <p>提供各種類型的車輛供您選擇</p>
            </div>
            <div class="feature-card">
                <h3>優惠價格</h3>
                <p>合理的價格，超值的服務</p>
            </div>
            <div class="feature-card">
                <h3>24/7服務</h3>
                <p>全天候客服支援</p>
            </div>
        </div>
    </section>

    <footer>
        <p>&copy; 2024 CarRental. All rights reserved.</p>
    </footer>

    <!-- Scripts -->
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        // 全域變數
        const modelCache = new Map();
        const BATCH_SIZE = 9;
        let skip = 0;
        let loading = false;
        let finished = false;

        // 載入品牌列表
        const loadBrands = async () => {
            const brandSelect = document.getElementById('brand');
            try {
                const response = await fetch('cars/api/brands');
                if (!response.ok) throw new Error(`HTTP ${response.status}`);

                const brands = await response.json();
                console.log('Brands loaded:', brands);

                brandSelect.innerHTML = '<option value="">請選擇品牌</option>';
                brands.forEach(brand => {
                    const option = document.createElement('option');
                    option.value = brand;
                    option.textContent = brand;
                    brandSelect.appendChild(option);
                });

            } catch (error) {
                console.error('載入品牌失敗:', error);
                brandSelect.innerHTML = '<option value="">載入品牌失敗</option>';
            }
        };

        // 載入型號列表
        const loadModels = async (selectedBrand) => {
            const modelSelect = document.getElementById('model');

            if (!selectedBrand) {
                modelSelect.innerHTML = '<option value="">請先選擇品牌</option>';
                return;
            }

            modelSelect.innerHTML = '<option value="">載入中...</option>';

            try {
                let models;

                if (modelCache.has(selectedBrand)) {
                    models = modelCache.get(selectedBrand);
                } else {
                    const response = await fetch(`cars/api/models/${encodeURIComponent(selectedBrand)}`);
                    if (!response.ok) throw new Error(`HTTP ${response.status}`);

                    models = await response.json();
                    modelCache.set(selectedBrand, models);
                }

                console.log('Models loaded for', selectedBrand, ':', models);

                modelSelect.innerHTML = '<option value="">請選擇型號</option>';
                models.forEach(model => {
                    const option = document.createElement('option');
                    option.value = model;
                    option.textContent = model;
                    modelSelect.appendChild(option);
                });

            } catch (error) {
                console.error('載入型號失敗:', error);
                modelSelect.innerHTML = '<option value="">載入型號失敗</option>';
            }
        };

        // 渲染車輛卡片
        const renderCars = (cars, append = false) => {
            const container = document.getElementById('searchResult');

            if (!cars || cars.length === 0) {
                if (!append) {
                    container.innerHTML = '<div class="no-results">沒有找到符合條件的車輛</div>';
                }
                return;
            }

            const cardsHtml = cars.map(car => `
             <a href="/booking?carID=${car.carID}" class="car-card-link">
                <div class="car-card">
                    <img src="${car.imageURL || '/images/default-car.jpg'}" 
                         alt="${car.brand} ${car.model}" 
                         class="car-image"
                         onerror="this.src='/images/default-car.jpg'">
                    <div class="car-info">
                        <div class="car-title">${car.brand} ${car.model}</div>
                        <div class="car-year">${car.year}年</div>
                        <div class="car-details">
                            <div class="car-detail"><strong>車型:</strong> ${car.type || ''}</div>
                            <div class="car-detail"><strong>座位:</strong> ${car.seats || ''}人</div>
                            <div class="car-detail"><strong>傳動:</strong> ${car.transmission || ''}</div>
                            <div class="car-detail"><strong>動力:</strong> ${car.powerSource || ''}</div>
                        </div>
                        <div class="car-price">$${car.dailyRate || 0}/日</div>
                    </div>
                </div>
            `).join('');

            if (append) {
                container.innerHTML += cardsHtml;
            } else {
                container.innerHTML = cardsHtml;
            }
        };

        // 載入下一批車輛
        const loadNextBatch = async () => {
            if (loading || finished) return;
            loading = true;

            const params = new URLSearchParams();
            params.append('skip', skip);
            params.append('limit', BATCH_SIZE);

            try {
                const response = await fetch('/cars/search', {
                    method: 'POST',
                    body: params
                });

                if (!response.ok) throw new Error(`HTTP ${response.status}`);
                const cars = await response.json();

                if (cars.length < BATCH_SIZE) finished = true;
                renderCars(cars, true);
                skip += cars.length;

            } catch (error) {
                console.error('載入車輛失敗:', error);
                if (skip === 0) {
                    document.getElementById('searchResult').innerHTML =
                        '<div class="no-results">載入車輛資料時發生錯誤</div>';
                }
            } finally {
                loading = false;
            }
        };

        // 初始化日期選擇器
        const initDatePicker = () => {
            flatpickr("#dateRange", {
                mode: "range",
                minDate: "today",
                dateFormat: "Y-m-d",
                disableMobile: true,
                locale: {
                    rangeSeparator: " 至 ",
                    firstDayOfWeek: 1,
                    weekdays: {
                        shorthand: ["日", "一", "二", "三", "四", "五", "六"],
                        longhand: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]
                    }
                },
                onChange: function (selectedDates) {
                    if (selectedDates.length === 2) {
                        document.getElementById("startDate").value = selectedDates[0].toISOString().split('T')[0];
                        document.getElementById("endDate").value = selectedDates[1].toISOString().split('T')[0];
                    }
                }
            });
        };

        // 車輛選擇處理
        const selectCar = (carId) => {
            console.log('Selected car:', carId);
            window.location.href = `/booking?carID=${carId}`;
        };

        // 滾動載入更多
        window.addEventListener('scroll', () => {
            const { scrollTop, clientHeight, scrollHeight } = document.documentElement;
            if (scrollTop + clientHeight >= scrollHeight - 100) {
                loadNextBatch();
            }
        });

        // 頁面初始化
        document.addEventListener('DOMContentLoaded', async () => {
            // 1. 載入品牌選項
            await loadBrands();

            // 2. 綁定品牌變更事件
            document.getElementById('brand').addEventListener('change', function () {
                loadModels(this.value);
            });

            // 3. 初始化日期選擇器
            initDatePicker();

            // 4. 載入初始車輛資料
            loadNextBatch();
        });
    </script>

</body>

</html>